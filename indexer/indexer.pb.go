// Code generated by protoc-gen-go. DO NOT EDIT.
// source: indexer.proto

/*
Package __indexer is a generated protocol buffer package.

It is generated from these files:
	indexer.proto

It has these top-level messages:
	FullIndex
	PartialIndex
	Reply
*/
package __indexer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReturnCode int32

const (
	ReturnCode_OK        ReturnCode = 0
	ReturnCode_ERR_TYPE1 ReturnCode = 1
)

var ReturnCode_name = map[int32]string{
	0: "OK",
	1: "ERR_TYPE1",
}
var ReturnCode_value = map[string]int32{
	"OK":        0,
	"ERR_TYPE1": 1,
}

func (x ReturnCode) String() string {
	return proto.EnumName(ReturnCode_name, int32(x))
}
func (ReturnCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type FullIndex struct {
	Request *google_protobuf.Empty `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
}

func (m *FullIndex) Reset()                    { *m = FullIndex{} }
func (m *FullIndex) String() string            { return proto.CompactTextString(m) }
func (*FullIndex) ProtoMessage()               {}
func (*FullIndex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FullIndex) GetRequest() *google_protobuf.Empty {
	if m != nil {
		return m.Request
	}
	return nil
}

type PartialIndex struct {
	NodeId []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (m *PartialIndex) Reset()                    { *m = PartialIndex{} }
func (m *PartialIndex) String() string            { return proto.CompactTextString(m) }
func (*PartialIndex) ProtoMessage()               {}
func (*PartialIndex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PartialIndex) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type Reply struct {
	ReturnCode  ReturnCode `protobuf:"varint,1,opt,name=return_code,json=returnCode,enum=indexer.ReturnCode" json:"return_code,omitempty"`
	ErrorDetail string     `protobuf:"bytes,2,opt,name=error_detail,json=errorDetail" json:"error_detail,omitempty"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Reply) GetReturnCode() ReturnCode {
	if m != nil {
		return m.ReturnCode
	}
	return ReturnCode_OK
}

func (m *Reply) GetErrorDetail() string {
	if m != nil {
		return m.ErrorDetail
	}
	return ""
}

func init() {
	proto.RegisterType((*FullIndex)(nil), "indexer.FullIndex")
	proto.RegisterType((*PartialIndex)(nil), "indexer.PartialIndex")
	proto.RegisterType((*Reply)(nil), "indexer.Reply")
	proto.RegisterEnum("indexer.ReturnCode", ReturnCode_name, ReturnCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Indexer service

type IndexerClient interface {
	FullIndexRequest(ctx context.Context, in *FullIndex, opts ...grpc.CallOption) (*Reply, error)
	PartialIndexRequest(ctx context.Context, in *PartialIndex, opts ...grpc.CallOption) (*Reply, error)
}

type indexerClient struct {
	cc *grpc.ClientConn
}

func NewIndexerClient(cc *grpc.ClientConn) IndexerClient {
	return &indexerClient{cc}
}

func (c *indexerClient) FullIndexRequest(ctx context.Context, in *FullIndex, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := grpc.Invoke(ctx, "/indexer.Indexer/FullIndexRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexerClient) PartialIndexRequest(ctx context.Context, in *PartialIndex, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := grpc.Invoke(ctx, "/indexer.Indexer/PartialIndexRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Indexer service

type IndexerServer interface {
	FullIndexRequest(context.Context, *FullIndex) (*Reply, error)
	PartialIndexRequest(context.Context, *PartialIndex) (*Reply, error)
}

func RegisterIndexerServer(s *grpc.Server, srv IndexerServer) {
	s.RegisterService(&_Indexer_serviceDesc, srv)
}

func _Indexer_FullIndexRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FullIndex)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexerServer).FullIndexRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indexer.Indexer/FullIndexRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexerServer).FullIndexRequest(ctx, req.(*FullIndex))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indexer_PartialIndexRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartialIndex)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexerServer).PartialIndexRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indexer.Indexer/PartialIndexRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexerServer).PartialIndexRequest(ctx, req.(*PartialIndex))
	}
	return interceptor(ctx, in, info, handler)
}

var _Indexer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "indexer.Indexer",
	HandlerType: (*IndexerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FullIndexRequest",
			Handler:    _Indexer_FullIndexRequest_Handler,
		},
		{
			MethodName: "PartialIndexRequest",
			Handler:    _Indexer_PartialIndexRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "indexer.proto",
}

func init() { proto.RegisterFile("indexer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4f, 0x4f, 0x83, 0x40,
	0x10, 0xc5, 0xa5, 0x89, 0x10, 0x06, 0xda, 0x90, 0x6d, 0xd4, 0xa6, 0x5e, 0x2a, 0x1e, 0x6c, 0x3c,
	0x6c, 0x15, 0x8d, 0x17, 0xf5, 0xa2, 0x62, 0x42, 0x3c, 0xd8, 0x6c, 0xbc, 0xe8, 0x05, 0xa9, 0x3b,
	0x36, 0x24, 0xc8, 0xe2, 0xba, 0x24, 0xf6, 0xe4, 0x57, 0x37, 0x2c, 0x7f, 0x24, 0xde, 0x98, 0x37,
	0xef, 0x37, 0xbc, 0xb7, 0x30, 0x4c, 0x73, 0x8e, 0xdf, 0x28, 0x69, 0x21, 0x85, 0x12, 0xc4, 0x6a,
	0xc6, 0xe9, 0xfe, 0x5a, 0x88, 0x75, 0x86, 0x0b, 0x2d, 0xaf, 0xca, 0xf7, 0x05, 0x7e, 0x14, 0x6a,
	0x53, 0xbb, 0xfc, 0x6b, 0xb0, 0xef, 0xcb, 0x2c, 0x8b, 0x2a, 0x2f, 0x39, 0x01, 0x4b, 0xe2, 0x67,
	0x89, 0x5f, 0x6a, 0x62, 0xcc, 0x8c, 0xb9, 0x13, 0xec, 0xd2, 0x9a, 0xa5, 0x2d, 0x4b, 0xc3, 0x8a,
	0x65, 0xad, 0xcd, 0x3f, 0x02, 0x77, 0x99, 0x48, 0x95, 0x26, 0xcd, 0x85, 0x3d, 0xb0, 0x72, 0xc1,
	0x31, 0x4e, 0xb9, 0xbe, 0xe0, 0x32, 0xb3, 0x1a, 0x23, 0xee, 0xbf, 0xc2, 0x36, 0xc3, 0x22, 0xdb,
	0x90, 0x73, 0x70, 0x24, 0xaa, 0x52, 0xe6, 0xf1, 0x9b, 0xe0, 0xa8, 0x5d, 0xa3, 0x60, 0x4c, 0xdb,
	0xec, 0x4c, 0xef, 0x6e, 0x05, 0x47, 0x06, 0xb2, 0xfb, 0x26, 0x07, 0xe0, 0xa2, 0x94, 0x42, 0xc6,
	0x1c, 0x55, 0x92, 0x66, 0x93, 0xc1, 0xcc, 0x98, 0xdb, 0xcc, 0xd1, 0xda, 0x9d, 0x96, 0x8e, 0x0f,
	0x01, 0xfe, 0x60, 0x62, 0xc2, 0xe0, 0xf1, 0xc1, 0xdb, 0x22, 0x43, 0xb0, 0x43, 0xc6, 0xe2, 0xa7,
	0xe7, 0x65, 0x78, 0xea, 0x19, 0xc1, 0x0f, 0x58, 0x51, 0xfd, 0x27, 0x72, 0x01, 0x5e, 0xd7, 0x9c,
	0xd5, 0x75, 0x08, 0xe9, 0x72, 0x74, 0xab, 0xe9, 0xa8, 0x97, 0xad, 0x2a, 0x70, 0x05, 0xe3, 0x7e,
	0xe5, 0x16, 0xdd, 0xe9, 0x6c, 0xfd, 0xed, 0x7f, 0xfa, 0xc6, 0x79, 0xb1, 0xe9, 0x65, 0x23, 0xad,
	0x4c, 0xfd, 0xac, 0x67, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x34, 0x61, 0x70, 0x2c, 0xba, 0x01,
	0x00, 0x00,
}
