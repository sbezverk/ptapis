// Code generated by protoc-gen-go. DO NOT EDIT.
// source: configuration.proto

/*
Package __configuration is a generated protocol buffer package.

It is generated from these files:
	configuration.proto

It has these top-level messages:
	Request
	Reply
*/
package __configuration

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Function int32

const (
	Function_PTAGENT     Function = 0
	Function_PTCOLLECTOR Function = 1
	Function_PTRECORDER  Function = 2
)

var Function_name = map[int32]string{
	0: "PTAGENT",
	1: "PTCOLLECTOR",
	2: "PTRECORDER",
}
var Function_value = map[string]int32{
	"PTAGENT":     0,
	"PTCOLLECTOR": 1,
	"PTRECORDER":  2,
}

func (x Function) String() string {
	return proto.EnumName(Function_name, int32(x))
}
func (Function) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Mode int32

const (
	Mode_PNODE  Mode = 0
	Mode_PENODE Mode = 1
)

var Mode_name = map[int32]string{
	0: "PNODE",
	1: "PENODE",
}
var Mode_value = map[string]int32{
	"PNODE":  0,
	"PENODE": 1,
}

func (x Mode) String() string {
	return proto.EnumName(Mode_name, int32(x))
}
func (Mode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ReturnCode int32

const (
	ReturnCode_OK      ReturnCode = 0
	ReturnCode_ERRID   ReturnCode = 1
	ReturnCode_ERRFUNC ReturnCode = 2
	ReturnCode_ERRNAME ReturnCode = 3
)

var ReturnCode_name = map[int32]string{
	0: "OK",
	1: "ERRID",
	2: "ERRFUNC",
	3: "ERRNAME",
}
var ReturnCode_value = map[string]int32{
	"OK":      0,
	"ERRID":   1,
	"ERRFUNC": 2,
	"ERRNAME": 3,
}

func (x ReturnCode) String() string {
	return proto.EnumName(ReturnCode_name, int32(x))
}
func (ReturnCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Request struct {
	Name     string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id       []byte   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Function Function `protobuf:"varint,3,opt,name=function,enum=configuration.Function" json:"function,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Request) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Request) GetFunction() Function {
	if m != nil {
		return m.Function
	}
	return Function_PTAGENT
}

type Reply struct {
	Id          []byte            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReturnCode  ReturnCode        `protobuf:"varint,2,opt,name=return_code,json=returnCode,enum=configuration.ReturnCode" json:"return_code,omitempty"`
	ErrorDetail string            `protobuf:"bytes,3,opt,name=error_detail,json=errorDetail" json:"error_detail,omitempty"`
	Mode        Mode              `protobuf:"varint,4,opt,name=mode,enum=configuration.Mode" json:"mode,omitempty"`
	Port        map[string]uint32 `protobuf:"bytes,5,rep,name=port" json:"port,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Reply) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Reply) GetReturnCode() ReturnCode {
	if m != nil {
		return m.ReturnCode
	}
	return ReturnCode_OK
}

func (m *Reply) GetErrorDetail() string {
	if m != nil {
		return m.ErrorDetail
	}
	return ""
}

func (m *Reply) GetMode() Mode {
	if m != nil {
		return m.Mode
	}
	return Mode_PNODE
}

func (m *Reply) GetPort() map[string]uint32 {
	if m != nil {
		return m.Port
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "configuration.Request")
	proto.RegisterType((*Reply)(nil), "configuration.Reply")
	proto.RegisterEnum("configuration.Function", Function_name, Function_value)
	proto.RegisterEnum("configuration.Mode", Mode_name, Mode_value)
	proto.RegisterEnum("configuration.ReturnCode", ReturnCode_name, ReturnCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Configurator service

type ConfiguratorClient interface {
	ConfigurationRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}

type configuratorClient struct {
	cc *grpc.ClientConn
}

func NewConfiguratorClient(cc *grpc.ClientConn) ConfiguratorClient {
	return &configuratorClient{cc}
}

func (c *configuratorClient) ConfigurationRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := grpc.Invoke(ctx, "/configuration.Configurator/ConfigurationRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Configurator service

type ConfiguratorServer interface {
	ConfigurationRequest(context.Context, *Request) (*Reply, error)
}

func RegisterConfiguratorServer(s *grpc.Server, srv ConfiguratorServer) {
	s.RegisterService(&_Configurator_serviceDesc, srv)
}

func _Configurator_ConfigurationRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfiguratorServer).ConfigurationRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configuration.Configurator/ConfigurationRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfiguratorServer).ConfigurationRequest(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Configurator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "configuration.Configurator",
	HandlerType: (*ConfiguratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConfigurationRequest",
			Handler:    _Configurator_ConfigurationRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "configuration.proto",
}

func init() { proto.RegisterFile("configuration.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xcd, 0x6e, 0x9c, 0xb4, 0x19, 0xa7, 0xe9, 0x32, 0x8d, 0x20, 0x54, 0x02, 0x85, 0x5e, 0x88,
	0x72, 0xc8, 0xc1, 0x3d, 0x50, 0xca, 0xa9, 0xd8, 0x5b, 0x84, 0x68, 0x63, 0x6b, 0x64, 0x2e, 0x5c,
	0xaa, 0x34, 0xde, 0x22, 0x8b, 0xd4, 0x1b, 0x96, 0x35, 0x52, 0xfe, 0x81, 0x8f, 0x46, 0xde, 0xba,
	0x86, 0xb4, 0xbd, 0xbd, 0x7d, 0xf3, 0xf6, 0xcd, 0xcc, 0xd3, 0xc0, 0xc1, 0x52, 0x17, 0x37, 0xf9,
	0xf7, 0xd2, 0x2c, 0x6c, 0xae, 0x8b, 0xd9, 0xda, 0x68, 0xab, 0x71, 0x6f, 0x8b, 0x3c, 0xba, 0x86,
	0x1d, 0x52, 0x3f, 0x4b, 0xf5, 0xcb, 0x22, 0x82, 0x57, 0x2c, 0x6e, 0xd5, 0x88, 0x8d, 0xd9, 0xa4,
	0x47, 0x0e, 0xe3, 0x00, 0x78, 0x9e, 0x8d, 0xf8, 0x98, 0x4d, 0xfa, 0xc4, 0xf3, 0x0c, 0x8f, 0x61,
	0xf7, 0xa6, 0x2c, 0x96, 0xd5, 0xd7, 0x51, 0x7b, 0xcc, 0x26, 0x83, 0xe0, 0xc5, 0x6c, 0xbb, 0xcb,
	0x79, 0x5d, 0xa6, 0x46, 0x78, 0xf4, 0x87, 0x43, 0x87, 0xd4, 0x7a, 0xb5, 0xa9, 0xed, 0x58, 0x63,
	0x77, 0x0a, 0xbe, 0x51, 0xb6, 0x34, 0xc5, 0xd5, 0x52, 0x67, 0xca, 0xf5, 0x19, 0x04, 0x2f, 0x1f,
	0x38, 0x92, 0x53, 0x84, 0x3a, 0x53, 0x04, 0xa6, 0xc1, 0xf8, 0x06, 0xfa, 0xca, 0x18, 0x6d, 0xae,
	0x32, 0x65, 0x17, 0xf9, 0xca, 0x8d, 0xd3, 0x23, 0xdf, 0x71, 0x91, 0xa3, 0xf0, 0x2d, 0x78, 0xb7,
	0x95, 0xaf, 0xe7, 0x7c, 0x0f, 0x1e, 0xf8, 0x5e, 0x56, 0x8e, 0x4e, 0x80, 0x01, 0x78, 0x6b, 0x6d,
	0xec, 0xa8, 0x33, 0x6e, 0x4f, 0xfc, 0xe0, 0xf5, 0xa3, 0x01, 0xd6, 0xab, 0xcd, 0x2c, 0xd1, 0xc6,
	0xca, 0xc2, 0x9a, 0x0d, 0x39, 0xed, 0xe1, 0x3b, 0xe8, 0x35, 0x14, 0x0a, 0x68, 0xff, 0x50, 0x9b,
	0x3a, 0xba, 0x0a, 0xe2, 0x10, 0x3a, 0xbf, 0x17, 0xab, 0xf2, 0x6e, 0xa9, 0x3d, 0xba, 0x7b, 0x9c,
	0xf2, 0x13, 0x36, 0x3d, 0x81, 0xdd, 0xfb, 0x90, 0xd0, 0x87, 0x9d, 0x24, 0x3d, 0xfb, 0x24, 0xe7,
	0xa9, 0x68, 0xe1, 0x3e, 0xf8, 0x49, 0x1a, 0xc6, 0x17, 0x17, 0x32, 0x4c, 0x63, 0x12, 0x0c, 0x07,
	0x00, 0x49, 0x4a, 0x32, 0x8c, 0x29, 0x92, 0x24, 0xf8, 0xf4, 0x15, 0x78, 0xd5, 0xd0, 0xd8, 0x83,
	0x4e, 0x32, 0x8f, 0x23, 0x29, 0x5a, 0x08, 0xd0, 0x4d, 0xa4, 0xc3, 0x6c, 0xfa, 0x1e, 0xe0, 0x5f,
	0x56, 0xd8, 0x05, 0x1e, 0x7f, 0x11, 0xad, 0x4a, 0x2c, 0x89, 0x3e, 0x47, 0x82, 0x55, 0xdd, 0x24,
	0xd1, 0xf9, 0xd7, 0x79, 0x28, 0x78, 0xfd, 0x98, 0x9f, 0x5d, 0x4a, 0xd1, 0x0e, 0x52, 0xe8, 0x87,
	0xcd, 0xce, 0xda, 0x60, 0x04, 0xc3, 0xf0, 0xff, 0x0c, 0xee, 0x6f, 0xe4, 0xf9, 0xa3, 0x68, 0x1c,
	0x7f, 0x38, 0x7c, 0x2a, 0xb2, 0x8f, 0xcf, 0xbe, 0xed, 0xcf, 0x3e, 0x6c, 0x15, 0xae, 0xbb, 0xee,
	0x0a, 0x8f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x82, 0x80, 0xe2, 0x2e, 0x9c, 0x02, 0x00, 0x00,
}
